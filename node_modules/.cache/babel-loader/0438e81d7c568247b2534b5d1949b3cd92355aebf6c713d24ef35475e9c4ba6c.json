{"ast":null,"code":"var _jsxFileName = \"/home/almirfilho/learning/react/todo-app-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\nfunction App(props) {\n  _s();\n  var _tasks$filter;\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this));\n  function addTask(name) {\n    const newTask = {\n      id: `todo-${nanoid()}`,\n      name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    // console.log(tasks); //[!] Is not the updated version, it shows the tasks array before adding the new one\n  }\n  ;\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  ;\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n  ;\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return {\n          ...task,\n          name: newName\n        };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  ;\n  const taskList = tasks === null || tasks === void 0 ? void 0 : (_tasks$filter = tasks.filter(FILTER_MAP[filter])) === null || _tasks$filter === void 0 ? void 0 : _tasks$filter.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this));\n  const tasksNoun = taskList.length === 1 ? \"task\" : \"tasks\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoMatic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: filterList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XEViG1OucSQptY/dyFJYxL9pby8=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","nanoid","Todo","Form","FilterButton","jsxDEV","_jsxDEV","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","_c","App","props","_s","_tasks$filter","tasks","setTasks","filter","setFilter","filterList","map","name","isPressed","fileName","_jsxFileName","lineNumber","columnNumber","addTask","newTask","id","toggleTaskCompleted","updatedTasks","deleteTask","remainingTasks","editTask","newName","editedTaskList","taskList","tasksNoun","length","headingText","className","children","onSubmit","role","_c2","$RefreshReg$"],"sources":["/home/almirfilho/learning/react/todo-app-react/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton \n      key={name} \n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter} />\n  ));\n\n  function addTask(name) {\n    const newTask = { id:`todo-${nanoid()}`, name, completed:false };\n    setTasks([...tasks, newTask]);\n    // console.log(tasks); //[!] Is not the updated version, it shows the tasks array before adding the new one\n  };\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id)\n      {\n        return {...task, completed:!task.completed};\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  };\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      if (id === task.id)\n      {\n        return {...task, name:newName};\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  };\n  \n  const taskList = tasks\n    ?.filter(FILTER_MAP[filter])\n    ?.map((task) => (\n    <Todo \n      id={task.id} \n      name={task.name} \n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const tasksNoun = taskList.length === 1 ? \"task\" : \"tasks\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form onSubmit={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\">\n          {taskList}\n        </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}